#!/bin/sh
#
# File:    makeSingleNetworkCycleLengthDistributionTable.sh
# Author:  Alex Stivala
# Created: July 2019
#
# Run the CYPATH software to make tables of cycle and chordless cycle
# length distributions from a single input graph
# for reading in R and plotting etc.
#
# Note that also cycle counting (in particular chordless cycles) uses the 
# CYPATH software from http://research.nii.ac.jp/~uno/code/cypath11.zip
# but have to edit the transgrh.pl script to add a semicolon on the end of line
# 38 as it does not work otherwise.
#
# Reference for CYPATH:
#
#    Uno, T., & Satoh, H. (2014, October). An efficient algorithm for
#    enumerating chordless cycles and chordless paths. In International
#    Conference on Discovery Science (pp. 313-324). Springer, Cham.
#
#
# Usage: makeSingleNetworkCycleLengthDistributionTable.sh type edgelist.txt
#
#    type is eiher c for cycle or C for chordless cycle (CYPATH option)
#    edgelist.txt is graph in (0 based sequential node nums) edge list format
#
# Output is to stdout.
#
#  e.g.: makeSingleNetworkCycleLengthDistributionTable.sh C patricia90_edgelist.txt > patricia90_chrodlesscycledisttable.txt
#

CYPATHDIR=${HOME}/CYPATH
PATH=${PATH}:${CYPATHDIR}

if [ $# -ne 2 ]; then
    echo "Usage: $0 c|C edgelist.txt" >&2
    exit 1
fi
cypathopt=$1
edgelistfile=$2

echo "# Generated by: $0 $*"
echo "# At: " `date`
echo "# On: " `uname -a`

echo "length count" # header line:  cycle len, count

tmpfile=`mktemp`

# convert to format for CYPATH in tmpfile
transgrh.pl < ${edgelistfile} > ${tmpfile}

# run CYPATH to get cycle length distribution
# each line n of output (after first) is number of cycles of len n 
# starts at 0 (which is always 0) so skip that too (1 is also always 0 
# but awk NR starts at 1 so easier to keep it)
cypath ${cypathopt} ${tmpfile} | tail -n+3 | awk '{print NR,$0}'

rm ${tmpfile}

