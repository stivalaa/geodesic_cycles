#!/bin/sh
#
# File:    makeAtomicCycleLengthDistriubutionTables.sh
# Author:  Alex Stivala
# Created: August 2019
#
# Run the findAtomicCycles program to make tables of atomic cycle
# length distributions from sets of simulated networks,
# for reading in R and plotting etc.
# The simulated network are read from the directory where they were created
# with the  generateSimulatedNetworksFromStatnetModel.R script.
#
# Runs the findAtomicCycles program which uses the
# Waffles machine learning library:
#
# http://gashler.com/mike/waffles/index.html
# https://github.com/mikegashler/waffles
# 
# References:
# 
# Gashler, M. (2011). Waffles: A machine learning toolkit. Journal of
# Machine Learning Research, 12(Jul), 2383-2387.
# 
# Gashler, M., & Martinez, T. (2012). Robust manifold learning with
# CycleCut. Connection Science, 24(1), 57-69.
#
#
# Usage: makeAtomicCycleLengthDistriubutionTables.sh inputdir
#
#    inputdir is directory containing simualted networks
#
# Output is to stdout.
#
#  e.g.: makeAtomicCycleLengthDistriubutionTables.sh simulated/model1 > model1_aatomiccycledisttable.txt
#

FINDATOMICDIR=../../findAtomicCycles/src
PATH=${PATH}:${FINDATOMICDIR}

if [ $# -ne 1 ]; then
    echo "Usage: $0 inputdir" >&2
    exit 1
fi
inputdir=$1

echo "# Generated by: $0 $*"
echo "# At: " `date`
echo "# On: " `uname -a`

# need number of nodes, just concatentate all simulated newtorks and
# get max node number (and add one)
maxnodenum=`cat ${inputdir}/sim_model*_*_edgelist.txt | tr '\t' '\n' | tr ' ' '\n' | sort -n | tail -n-1`
numnodes=`expr $maxnodenum + 1`

echo "sim length count" # header line: simulated network num, cycle len, count
for edgelistfile in ${inputdir}/sim_model*_*_edgelist.txt
do
    # format of each input edgelist file is e.g. sim_model1_95_edgelist.txt
    # so get number from filename
    num=`echo "${edgelistfile}" | sed 's/.*sim_mode[a-z]*[0-9]*_\([0-9]*\)_edgelist[.]txt/\1/g'`

    # run findAtomicCycles to get atomic cycle length distribution
    # each line of output is space delimited list of node numbers
    # so by just using awk to print number of fields, sorting and using
    # -c on uniq option to count, we get a frequency table. Note that uniq -c
    # outputs the frequency first, then the string, so we reverse the output
    #fields to get length then count
    output=`findAtomicCycles ${numnodes} ${edgelistfile} | awk '{print NF}' | sort -n |uniq -c | awk -vnum=$num '{print num, $2, $1}'`
    if [ -z "$output" ]; then
        # if no atomic cycles found, then put NA for count and len for this sim
        echo "${num} NA NA"
     else
        echo "${output}"
    fi
done
