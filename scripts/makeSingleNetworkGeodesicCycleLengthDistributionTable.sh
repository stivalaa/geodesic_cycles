#!/bin/sh
#
# File:    makeSingleNetworkGeodesicCycleLengthDistriubutionTables.sh
# Author:  Alex Stivala
# Created: December 2022
#
# Run the CYPATH and filteryclesGeodesic.py programs to get geodesic
# length distributions from a single network
# for reading in R and plotting etc.
#
# Usage: makeGeodesicCycleLengthDistriubutionTables.sh edgelist.txt
#
#    edgelist.txt is edge list fo network 
#
# Output is to stdout.
#
#  e.g.: makeSingleNetworkGeodesicCycleLengthDistributionTable.sh patricia90_edgelist.txt > patricia90_atomiccycledisttable.txt
#

CYPATHDIR=${HOME}/CYPATH
SCRIPTDIR=`dirname "$0"`
PATH=${SCRIPTDIR}:${PATH}:${CYPATHDIR}

if [ $# -ne 1 ]; then
    echo "Usage: $0  edgelist.txt" >&2
    exit 1
fi
edgelistfile=$1

echo "# Generated by: $0 $*"
echo "# At: " `date`
echo "# On: " `uname -a`

echo "length count" # header line:  cycle len, count

tmpfile=`mktemp`

# convert to format for CYPATH in tmpfile
transgrh.pl < ${edgelistfile} > ${tmpfile}

## run CYPATH and filterCyclesGeodesic.py to get geodesic cycles and
## use  uses awk, sort, and uniq to get counts of each geodesic cycle length
## Note capital C on cypath to get chordless cycles only,
## since a geodesic cycle must be chordless. The "-, ," option sets the
## output delimiter to comma, and fgrep used to get only lines with comma,
## so that summary (cycle length counts) information is removed (there is 
## a q option documented to do this, but appears not to be implemented).
##
cypath C -, , ${tmpfile} - | fgrep , | filterCyclesGeodesic.py  ${edgelistfile}  | awk -F, '{print NF}' | sort -n | uniq -c | awk '{print $2,$1}'

rm ${tmpfile}

